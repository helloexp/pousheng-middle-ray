<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017 杭州端点网络科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="SkuStockTask">
    <resultMap id="SkuStockTaskMap" type="SkuStockTask">
        <id column="id" property="id"/>
        <result column="status" property="status"/>
        <result column="sku_count" property="skuCount"/>
        <result column="sku_json" property="skuJson"/>
        <result column="timeout_at" property="timeoutAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        <result column="type" property="type"/>
    </resultMap>

    <sql id="tb">
        pousheng_sku_stock_tasks
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        status, sku_count, sku_json, timeout_at, created_at, updated_at,type
    </sql>

    <sql id="vals">
        #{status}, #{skuCount}, #{skuJson}, #{timeoutAt}, now(), now(),#{type}
    </sql>

    <sql id="queryCondition">
        
        <if test="status != null">and `status` = #{status}</if>
        
        <if test="skuCount != null">and `sku_count` = #{skuCount}</if>
        
        <if test="skuJson != null">and `sku_json` = #{skuJson}</if>
        
        <if test="timeoutAt != null">and `timeout_at` = #{timeoutAt}</if>
        
        <if test="createdAt != null">and `created_at` = #{createdAt}</if>
        
        <if test="updatedAt != null">and `updated_at` = #{updatedAt}</if>
        
        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>

        <if test="type != null">and type &lt; #{type}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="SkuStockTask" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="SkuStockTaskMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>


    <select id="findWaiteHandleLimit" resultMap="SkuStockTaskMap"  parameterType="map">
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE status = #{status} and type = #{type} ORDER BY id asc LIMIT #{qty}
    </select>



    <select id="findByIds" parameterType="list" resultMap="SkuStockTaskMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="SkuStockTask">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="status != null">status = #{status},</if>
            <if test="skuCount != null">sku_count = #{skuCount},</if>
            <if test="skuJson != null">sku_json = #{skuJson},</if>
            <if test="timeoutAt != null">timeout_at = #{timeoutAt},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="SkuStockTaskMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <where>
        <include refid="queryCondition"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <where>
        <include refid="queryCondition"/>
        </where>
    </select>

    <update id="updateToHandle" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET timeout_at = #{timeoutAt},status =#{toStatus}, updated_at = now()
        WHERE id = #{id} AND status =#{fromStatus}
    </update>

    <update id="updateToHandleBatch" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status =#{toStatus}, updated_at = now()
        WHERE status =#{fromStatus} AND id IN
        <foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <update id="updateTimeOutHandleTask" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET timeout_at = #{timeoutAt},status =0, updated_at = now()
        WHERE status = 1 AND timeout_at &lt; #{endAt}
    </update>


    <update id="updateStatusById" parameterType="map">
        UPDATE
        <include refid="tb"/>
        SET status = #{status}, updated_at = now()
        WHERE id = #{id}
    </update>


</mapper>