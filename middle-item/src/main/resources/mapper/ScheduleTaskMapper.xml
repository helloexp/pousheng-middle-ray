<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017 杭州端点网络科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ScheduleTask">
    <resultMap id="ScheduleTaskMap" type="ScheduleTask">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="user_id" property="userId"/>
        <result column="business_id" property="businessId"/>
        <result column="business_type" property="businessType"/>
        <result column="status" property="status"/>
        <result column="extra_json" property="extraJson"/>
        <result column="result" property="result"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        pousheng_schedule_task
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        type, user_id, business_id, business_type, status, extra_json, result, created_at, updated_at
    </sql>

    <sql id="vals">
        #{type}, #{userId}, #{businessId}, #{businessType}, #{status}, #{extraJson}, #{result}, now(), now()
    </sql>

    <sql id="queryCondition">

        <if test="type != null">and `type` = #{type}</if>

        <if test="userId != null">and `user_id` = #{userId}</if>

        <if test="businessId != null">and `business_id` = #{businessId}</if>

        <if test="businessType != null">and `business_type` = #{businessType}</if>

        <if test="status != null">and `status` = #{status}</if>

        <if test="extraJson != null">and `extra_json` = #{extraJson}</if>

        <if test="result != null">and `result` = #{result}</if>

        <if test="createdAt != null">and `created_at` = #{createdAt}</if>

        <if test="updatedAt != null">and `updated_at` = #{updatedAt}</if>

        <if test="startAt != null">and created_at &gt; #{startAt}</if>
        <if test="endAt != null">and created_at &lt; #{endAt}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="ScheduleTask" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>


    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (
            #{i.type}, #{i.userId}, #{i.businessId}, #{i.businessType}, #{i.status}, #{i.extraJson}, #{i.result}, now(),
            now()
            )
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultMap="ScheduleTaskMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="ScheduleTaskMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order"/>
    </select>

    <update id="update" parameterType="ScheduleTask">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="type != null">type = #{type},</if>
            <if test="userId != null">user_id = #{userId},</if>
            <if test="businessId != null">business_id = #{businessId},</if>
            <if test="businessType != null">business_type = #{businessType},</if>
            <if test="status != null">status = #{status},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            <if test="result != null">result = #{result},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="ScheduleTaskMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from
        <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>

    <select id="findFirstByTypeAndStatus" parameterType="map" resultMap="ScheduleTaskMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE type = #{type} AND status= #{status}
        limit 1
    </select>


    <update id="updateStatus" parameterType="map" >
        UPDATE
        <include refid="tb"/>
        SET  status = #{targetStatus}
        WHERE  status = #{status} AND id =#{id}
    </update>

</mapper>
