<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017 杭州端点网络科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="StockPushLog">
    <resultMap id="StockPushLogMap" type="StockPushLog">
        <id column="id" property="id"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="sku_code" property="skuCode"/>
        <result column="channel_sku_id" property="channelSkuId" />
        <result column="out_id" property="outId"/>
        <result column="warehouse_id" property="warehouseId"/>
        <result column="warehouse_name" property="warehouseName"/>
        <result column="warehouse_outer_code" property="warehouseOuterCode"/>
        <result column="material_id" property="materialId"/>
        <result column="quantity" property="quantity"/>
        <result column="status" property="status"/>
        <result column="cause" property="cause"/>
        <result column="requestNo" property="requestNo"/>
        <result column="lineNo" property="lineNo"/>
        <result column="sync_at" property="syncAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        pousheng_stock_push_logs
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        shop_id, shop_name,out_id, warehouse_id, warehouse_name, warehouse_outer_code, sku_code,channel_sku_id,material_id,quantity,status,cause,request_no,line_no,sync_at,created_at, updated_at
    </sql>

    <sql id="vals">
        #{shopId}, #{shopName},#{outId},#{warehouseId}, #{warehouseName}, #{warehouseOuterCode}, #{skuCode},#{channelSkuId},#{materialId}, #{quantity},#{status},#{cause},#{requestNo},#{lineNo},#{syncAt}, now(), now()
    </sql>

    <sql id="queryCondition">

        <if test="shopId !=null">and `shop_id` = #{shopId}</if>

        <if test="shopName != null">and `shop_name` =#{shopName}</if>

        <if test="outId !=null">and `out_id` = #{outId}</if>

        <if test="warehouseId !=null">and `warehouse_id` = #{warehouseId}</if>

        <if test="warehouseName !=null">and `warehouse_name` = #{warehouseName}</if>

        <if test="warehouseOuterCode !=null">and `warehouse_outer_code` = #{warehouseOuterCode}</if>

        <if test="skuCode != null">and `sku_code` = #{skuCode}</if>

        <if test="channelSkuId != null">`channel_sku_id` = #{channelSkuId}</if>

        <if test="materialId != null">and `material_id` = #{materialId}</if>

        <if test="status != null">and `status` = #{status}</if>

        <if test="requestNo != null">and `request_no` = #{requestNo}</if>

        <if test="lineNo != null">and `line_no` = #{lineNo}</if>

        <if test="startAt != null">AND <![CDATA[sync_at >= #{startAt}]]> </if>

        <if test="endAt != null">AND <![CDATA[sync_at <= #{endAt}]]> </if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="StockPushLog" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>
    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (
            #{i.shopId}, #{i.shopName},#{i.outId},#{i.warehouseId}, #{i.warehouseName}, #{i.warehouseOuterCode}, #{i.skuCode}, #{i.channelSkuId}, #{i.materialId}, #{i.quantity}, #{i.status}, #{i.cause}, #{i.requestNo}, #{i.lineNo},
            #{i.syncAt}, now(), now()
            )
        </foreach>
    </insert>
    <select id="findById" parameterType="long" resultMap="StockPushLogMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="StockPushLog">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="shopId != null">shop_id = #{shopId},</if>
            <if test="shopName != null">`shop_name` = #{shopName},</if>
            <if test="outId !=null">and `out_id` = #{outId}</if>
            <if test="warehouseId !=null">and `warehouse_id` = #{warehouseId}</if>
            <if test="warehouseName !=null">and `warehouse_name` = #{warehouseName}</if>
            <if test="warehouseOuterCode !=null">and `warehouse_outer_code` = #{warehouseOuterCode}</if>
            <if test="skuCode != null">sku_code = #{skuCode},</if>
            <if test="channelSkuId != null">channel_sku_id = #{channelSkuId},</if>
            <if test="materialId != null">material_id = #{materialId},</if>
            <if test="quantity != null">quantity = #{quantity},</if>
            <if test="requestNo != null">request_no = #{requestNo},</if>
            <if test="lineNo != null">line_no = #{lineNo},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <update id="batchUpdateFailureByRequestIdAndLineNo" parameterType="list">
        update
        <include refid="tb"/>
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="status =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.status!=null">
                        when request_no = #{i.requestNo} and line_no = #{i.lineNo} then #{i.status}
                    </if>
                </foreach>
            </trim>
            <trim prefix=" cause =case" suffix="end,">
                <foreach collection="list" item="i" index="index">
                    <if test="i.cause!=null">
                        when request_no = #{i.requestNo} and line_no = #{i.lineNo} then #{i.cause}
                    </if>
                </foreach>
            </trim>

            <trim prefix="updated_at =case" suffix="end," >
                <foreach collection="list" item="i" index="index">
                    when request_no = #{i.requestNo} and line_no = #{i.lineNo} then now()
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="i" index="index" >
            request_no = #{i.requestNo} and line_no = #{i.lineNo}
        </foreach>

    </update>

    <update id="batchUpdateSuccessByRequestIdAndLineNo" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            `status` = 3,
            updated_at=now()
        </set>
        WHERE request_no = #{requestNo} and line_no not in
        <foreach collection="lineNos" open="(" separator="," close=")"
                 item="lineNo">
            #{lineNo}
        </foreach>
    </update>

    <update id="updateStatusByRequest" parameterType="StockPushLog">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="status != null">`status` = #{status},</if>
            <if test="cause != null">`cause` = #{cause},</if>
            updated_at=now()
        </set>
        WHERE request_no = #{request_no}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="StockPushLogMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from
        <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>

</mapper>
