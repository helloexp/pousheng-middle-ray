package com.pousheng.middle.order.model;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Strings;
import io.terminus.common.utils.JsonMapper;
import io.terminus.parana.common.constants.JacksonType;
import lombok.Data;

import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: Model类
 * Date: 2019-06-03
 */
@Data
public class ReverseInstoreInfo implements Serializable {

    protected static final ObjectMapper objectMapper = JsonMapper.nonEmptyMapper().getMapper();


    private Long id;
    
    /**
     * 退货入库单单号
     */
    private String instoreNo;
    
    /**
     * 退货入库明细行
     */
    private String instoreDetailNo;
    
    /**
     * ERP单号
     */
    private String erpNo;
    
    /**
     * 平台销售单单号
     */
    private String platformNo;
    
    /**
     * 承运商运单号
     */
    private String carrierExpressNo;
    
    /**
     * 实际快递单号
     */
    private String realExpressNo;
    
    /**
     * 单据流入时间
     */
    private Date inFlowAt;
    
    /**
     * 完成时间
     */
    private Date accomplishAt;
    
    /**
     * 单据状态
     */
    private String status;
    
    /**
     * 渠道
     */
    private String channel;

    /**
     * 到仓时间
     */
    private Date arriveWmsAt;
    
    /**
     * 店铺
     */
    private String shop;
    
    private Date createdAt;
    
    private String createdBy;
    
    private String updatedAt;
    
    private Date updatedBy;
    
    private String extraJson;

    private String customerNote;

    /**
     * 额外信息,不持久化到数据库
     */
    protected Map<String, String> extra;


    public void setExtraJson(String extraJson) throws Exception {
        this.extraJson = extraJson;
        if (Strings.isNullOrEmpty(extraJson)) {
            this.extra = Collections.emptyMap();
        } else {
            this.extra = objectMapper.readValue(extraJson, JacksonType.MAP_OF_STRING);
        }
    }

    public void setExtra(Map<String, String> extra) {
        this.extra = extra;
        if (extra == null || extra.isEmpty()) {
            this.extraJson = null;
        } else {
            try {
                this.extraJson = objectMapper.writeValueAsString(extra);
            } catch (Exception e) {
                //ignore this fuck exception
            }
        }
    }

}
