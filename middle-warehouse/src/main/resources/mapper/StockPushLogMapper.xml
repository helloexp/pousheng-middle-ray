<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017 杭州端点网络科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="StockPushLog">
    <resultMap id="StockPushLogMap" type="StockPushLog">
        <id column="id" property="id"/>
        <result column="shop_id" property="shopId"/>
        <result column="shop_name" property="shopName"/>
        <result column="sku_code" property="skuCode"/>
        <result column="quantity" property="quantity"/>
        <result column="status" property="status"/>
        <result column="cause" property="cause"/>
        <result column="sync_at" property="syncAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>

    </resultMap>

    <sql id="tb">
        pousheng_stock_push_logs
    </sql>

    <sql id="cols_all">
        id,
        <include refid="cols_exclude_id"/>
    </sql>

    <sql id="cols_exclude_id">
        shop_id, shop_name,sku_code,quantity,status,cause,sync_at,created_at, updated_at
    </sql>

    <sql id="vals">
        #{shopId}, #{shopName},#{skuCode}, #{quantity},#{status},#{cause},#{syncAt}, now(), now()
    </sql>

    <sql id="queryCondition">

        <if test="shopId !=null">and `shop_id` = #{shopId}</if>

        <if test="shopName != null">and `shop_name` =#{shopName}</if>

        <if test="skuCode != null">and `sku_code` = #{skuCode}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="StockPushLog" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        (<include refid="vals"/>)
    </insert>
    <insert id="creates" parameterType="list">
        INSERT INTO
        <include refid="tb"/>
        (<include refid="cols_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (
            #{i.shopId}, #{i.shopName}, #{i.skuCode}, #{i.quantity}, #{i.status}, #{i.cause}, #{i.syncAt}, now(), now()
            )
        </foreach>
    </insert>
    <select id="findById" parameterType="long" resultMap="StockPushLogMap">
        SELECT
        <include refid="cols_all"/>
        FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </select>

    <update id="update" parameterType="StockPushLog">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="shopId != null">shop_id = #{shopId},</if>
            <if test="shopName != null">`shop_name` = #{shopName},</if>
            <if test="skuCode != null">sku_code = #{skuCode},</if>
            <if test="quantity != null"> quantity = #{quantity},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="StockPushLogMap">
        select id,
        <include refid="cols_exclude_id"/>
        from
        <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from
        <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>

</mapper>