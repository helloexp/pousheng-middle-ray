package com.pousheng.middle.order.impl.service;

import com.google.common.base.Throwables;
import com.pousheng.middle.order.dto.reverseLogistic.ReverseInstoreCriteria;
import com.pousheng.middle.order.impl.dao.ReverseInstoreInfoDao;
import com.pousheng.middle.order.model.ReverseInstoreInfo;
import com.pousheng.middle.order.service.ReverseInstoreInfoReadService;
import io.terminus.common.model.Paging;
import io.terminus.common.model.Response;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Map;

/**
 * Code generated by terminus code gen Desc: 读服务实现类 Date: 2019-06-03
 */
@Slf4j
@Service
public class ReverseInstoreInfoReadServiceImpl implements ReverseInstoreInfoReadService {

    private final ReverseInstoreInfoDao reverseInstoreInfoDao;

    @Autowired
    public ReverseInstoreInfoReadServiceImpl(ReverseInstoreInfoDao reverseInstoreInfoDao) {
        this.reverseInstoreInfoDao = reverseInstoreInfoDao;
    }

    @Override
    public Response<ReverseInstoreInfo> findReverseInstoreInfoById(Long reverseInstoreInfoId) {
        try {
            return Response.ok(reverseInstoreInfoDao.findById(reverseInstoreInfoId));
        } catch (Exception e) {
            log.error("find reverseInstoreInfo by id failed, reverseInstoreInfoId:{}, cause:{}", reverseInstoreInfoId,
                Throwables.getStackTraceAsString(e));
            return Response.fail("reverseInstoreInfo.find.fail");
        }
    }

    @Override
    public Response<ReverseInstoreInfo> findReverseExpressInfoByInstoreNoAndDetailNo(String instoreNo,
                                                                                     String instoreDetailNo) {
        ReverseInstoreCriteria reverseInstoreCriteria = new ReverseInstoreCriteria();
        reverseInstoreCriteria.setInstoreDetailNo(instoreDetailNo);
        reverseInstoreCriteria.setInstoreNo(instoreNo);
        return Response.ok(reverseInstoreInfoDao.findReverseExpressInfoByInstoreNoAndDetailNo(reverseInstoreCriteria));
    }

    @Override
    public Response<Paging<ReverseInstoreInfo>> paging(ReverseInstoreCriteria reverseInstoreCriteria) {

        return Response.ok(reverseInstoreInfoDao.paging(reverseInstoreCriteria.toMap()));
    }

    @Override
    public Response<Long> countReverseInstore(ReverseInstoreCriteria reverseInstoreCriteria) {
        return Response.ok(reverseInstoreInfoDao.countReverseInstore(reverseInstoreCriteria.toMap()));
    }
}
