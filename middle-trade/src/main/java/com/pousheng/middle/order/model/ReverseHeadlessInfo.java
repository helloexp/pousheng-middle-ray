package com.pousheng.middle.order.model;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.Strings;
import io.terminus.common.utils.JsonMapper;
import io.terminus.parana.common.constants.JacksonType;
import lombok.Data;

import java.io.Serializable;
import java.util.Collections;
import java.util.Date;
import java.util.Map;

/**
 * Code generated by terminus code gen
 * Desc: Model类
 * Date: 2019-06-03
 */
@Data
public class ReverseHeadlessInfo implements Serializable {

    protected static final ObjectMapper objectMapper = JsonMapper.nonEmptyMapper().getMapper();

    private Long id;
    
    /**
     * 无头件单号
     */
    private String headlessNo;
    
    /**
     * 渠道
     */
    private String channel;
    
    /**
     * 店铺
     */
    private String shop;
    
    /**
     * 快递单号
     */
    private String expressNo;
    
    /**
     * 平台单销售号
     */
    private String platformNo;
    
    /**
     * 客户名称
     */
    private String customer;
    
    /**
     * 手机号码
     */
    private String phone;
    
    /**
     * 状态
     */
    private String status;
    
    /**
     * 唯一码
     */
    private String uniqueNo;
    
    /**
     * 原因
     */
    private String reason;
    
    /**
     * 关联ASN:
     */
    private String relateAsn;
    
    /**
     * 盘盈入库单
     */
    private String inventoryProfitNo;
    
    /**
     * 出货方式
     */
    private String shipMode;
    
    /**
     * 出货快递公司
     */
    private String shipCompany;

    /**
     * 处理方式
     */
    private String processType;
    
    /**
     * 出货快递单号
     */
    private String shipExpressNo;
    
    private Date createdAt;
    
    private String createdBy;
    
    private Date updatedAt;

    /**
     *关闭时间
     */
    private Date closedAt ;
    
    private String updatedBy;
    
    /**
     * 扩展字段
     */
    private String extraJson;

    /**
     * 额外信息,不持久化到数据库
     */
    protected Map<String, String> extra;


    public void setExtraJson(String extraJson) throws Exception {
        this.extraJson = extraJson;
        if (Strings.isNullOrEmpty(extraJson)) {
            this.extra = Collections.emptyMap();
        } else {
            this.extra = objectMapper.readValue(extraJson, JacksonType.MAP_OF_STRING);
        }
    }

    public void setExtra(Map<String, String> extra) {
        this.extra = extra;
        if (extra == null || extra.isEmpty()) {
            this.extraJson = null;
        } else {
            try {
                this.extraJson = objectMapper.writeValueAsString(extra);
            } catch (Exception e) {
                //ignore this fuck exception
            }
        }
    }
}
