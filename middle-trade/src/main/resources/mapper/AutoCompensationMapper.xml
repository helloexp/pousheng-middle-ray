<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2018 杭州端点网络科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="AutoCompensation">
    <resultMap id="AutoCompensationMap" type="AutoCompensation">
        <id column="id" property="id"/>
        <result column="type" property="type" />
        <result column="status" property="status" />
        <result column="time" property="time" />
        <result column="extra_json" property="extraJson"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
    </resultMap>

    <sql id="tb">
        pousheng_auto_compensation
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        type,status,time,extra_json,created_at, updated_at
    </sql>

    <sql id="vals">
        #{type}, #{status},#{time}, #{extraJson}, now(), now()
    </sql>

    <sql id="queryCondition">

        <if test="type != null">and `type` = #{type}</if>

        <if test="status != null">and `status` = #{status}</if>

        <if test="extraJson != null"> and `extra_json` = #{extraJson}</if>

        <if test="createdAt != null">and `created_at` = #{createdAt}</if>

        <if test="updatedAt != null">and `updated_at` = #{updatedAt}</if>

        <if test="time != null">and <![CDATA[ `time` <= #{time} ]]> </if>

        <if test="otherType != null">and `type` != #{otherType}</if>

    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="AutoCompensation" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="AutoCompensationMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

    <select id="findByIds" parameterType="list" resultMap="AutoCompensationMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="AutoCompensation">
        UPDATE
        <include refid="tb"/>
        <set>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="time != null">time = #{time},</if>
            <if test="extraJson != null">extra_json = #{extraJson},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="list" resultMap="AutoCompensationMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="list" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>

    <update id="updateStatus" parameterType="map">
        UPDATE
        <include refid="tb"/>
        <set>
            status = #{status},
            updated_at=now()
        </set>
        where id in
        <foreach collection="ids" open="(" separator="," close=")"
                 item="id">
            #{id}
        </foreach>
    </update>

    <update id="resetStatus">
        UPDATE
        <include refid="tb"/>
        <set>
            status = #{targetStatus},
            updated_at=now()
        </set>
        where status = #{srcStatus} AND <![CDATA[ updated_at < date_add(now(),interval - 10 minute) ]]>
    </update>


</mapper>