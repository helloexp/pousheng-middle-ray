<?xml version="1.0" encoding="UTF-8" ?>
<!--
  ~ Copyright (c) 2017 杭州端点网络科技有限公司
  -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="WarehouseSkuStock">
    <resultMap id="WarehouseSkuStockMap" type="WarehouseSkuStock">
        <id column="id" property="id"/>
        <result column="warehouse_id" property="warehouseId"/>
        <result column="sku_code" property="skuCode"/>
        <result column="base_stock" property="baseStock"/>
        <result column="avail_stock" property="availStock"/>
        <result column="locked_stock" property="lockedStock"/>
        <result column="sync_at" property="syncAt"/>
        <result column="created_at" property="createdAt"/>
        <result column="updated_at" property="updatedAt"/>
        
    </resultMap>

    <sql id="tb">
        pousheng_warehouse_sku_stocks
    </sql>

    <sql id="cols_all">
        id, <include refid="cols_exclude_id" />
    </sql>

    <sql id="cols_exclude_id">
        warehouse_id, sku_code, base_stock, avail_stock, locked_stock, sync_at, created_at, updated_at
    </sql>

    <sql id="vals">
        #{warehouseId}, #{skuCode}, #{baseStock}, #{availStock}, #{lockedStock}, #{syncAt}, now(), now()
    </sql>

    <sql id="queryCondition">
        
        <if test="warehouseId != null">and `warehouse_id` = #{warehouseId}</if>

        <if test="shopId!=null"> and `shop_id`=#{shopId}</if>
        
        <if test="skuCode != null">and `sku_code` = #{skuCode}</if>
        
        <if test="baseStock != null">and `base_stock` = #{baseStock}</if>
        
        <if test="availStock != null">and `avail_stock` = #{availStock}</if>
        
        <if test="lockedStock != null">and `locked_stock` = #{lockedStock}</if>
    </sql>

    <sql id="order">
        order by id desc
    </sql>

    <insert id="create" parameterType="WarehouseSkuStock" keyProperty="id" useGeneratedKeys="true">
        INSERT INTO
        <include refid="tb" />
        (<include refid="cols_exclude_id" />)
        VALUES
        (<include refid="vals" />)
    </insert>

    <select id="findById" parameterType="long" resultMap="WarehouseSkuStockMap" >
        SELECT <include refid="cols_all" />
        FROM <include refid="tb" />
        WHERE id = #{id}
    </select>

   <select id="findByIds" parameterType="list" resultMap="WarehouseSkuStockMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        where id in
        <foreach collection="list" open="(" separator="," close=")"
                 item="item">
            #{item}
        </foreach>
        <include refid="order" />
    </select>

    <update id="update" parameterType="WarehouseSkuStock">
        UPDATE
        <include refid="tb"/>
        <set>
            <!--<if test="warehouseId != null">warehouse_id = #{warehouseId},</if>
            <if test="skuCode != null">sku_code = #{skuCode},</if>-->
            <if test="baseStock != null">base_stock = #{baseStock},</if>
            <if test="availStock != null">avail_stock = #{availStock},</if>
            <if test="lockedStock != null">locked_stock = #{lockedStock},</if>
            <if test="syncAt != null">sync_at = #{syncAt},</if>
            updated_at=now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM <include refid="tb"/>
        WHERE id = #{id}
    </delete>

    <select id="paging" parameterType="map" resultMap="WarehouseSkuStockMap">
        select id, <include refid="cols_exclude_id"/>
        from <include refid="tb"/>
        <where>
        <include refid="queryCondition"/>
        </where>
        order by id desc limit #{offset},#{limit}
    </select>

    <select id="count" parameterType="map" resultType="long">
        select count(1)
        from <include refid="tb"/>
        <where>
        <include refid="queryCondition"/>
        </where>
    </select>


    <select id="countByDistinctSkuCode"  parameterType="map" resultType="long">
        select count(distinct(sku_code))
        from <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
    </select>

    <select id="pagingByDistinctSkuCode" parameterType="map" resultMap="WarehouseSkuStockMap">
        select sku_code, sum(avail_stock) as avail_stock
        from <include refid="tb"/>
        <where>
            <include refid="queryCondition"/>
        </where>
        group by sku_code order by  sku_code limit #{offset},#{limit}
    </select>

</mapper>